[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Henry Gliedman Webpage",
    "section": "",
    "text": "Image description\n\n\nMathematics Student at St. Olaf College  MSCS Department @ St. Olaf College\n\n\nHigh School Diploma  2021 | Highland Park Senior High\nBA in Math, concentrations in Statistics/Data Science and Engineering 2025 | St. Olaf College"
  },
  {
    "objectID": "index.html#henry-gliedman",
    "href": "index.html#henry-gliedman",
    "title": "Henry Gliedman Webpage",
    "section": "",
    "text": "Image description\n\n\nMathematics Student at St. Olaf College  MSCS Department @ St. Olaf College\n\n\nHigh School Diploma  2021 | Highland Park Senior High\nBA in Math, concentrations in Statistics/Data Science and Engineering 2025 | St. Olaf College"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "maps.html",
    "href": "maps.html",
    "title": "maps",
    "section": "",
    "text": "#Maps\nHello this is the Maps page. Here we are going to explore some maps, and how we can infer visual data.\n\nMap 1:\nFirst we are going to import our data into R, and clean the NBA data so it can be joined to our US States data. The first map we are looking at today is a map of the distribution of NBA basketball players in the 48 continental states. First we are going to import our data into R, and clean the NBA data so it can be joined to our US States data. Then we will display the chart.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mdsr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\nnba_data&lt;- read.csv(\"C:/Users/henry/Downloads/264_R_Stuff/Players.csv\")\n#Edit NBA Data\nnew_NBA&lt;- nba_data|&gt;\n  mutate(birth_state= tolower(birth_state))|&gt;\n  drop_na(birth_state)|&gt;\n  group_by(birth_state)|&gt;\n  count(birth_state)\n\n#States Data\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nus_states &lt;- map_data(\"state\")\n\nus_states|&gt; \n  right_join(new_NBA, by=c(\"region\"= \"birth_state\"))|&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) + \n  geom_polygon(aes(fill = n), color = \"black\")+\n  scale_fill_gradient(low = \"white\", high = \"darkred\", na.value = \"white\", \n                      name = \"NBA Players\") +\n  labs(title = \"NBA Players by US State\", x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(legend.position = \"right\", panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank())\n\n\n\n\n\n\n\n\nAs we can see the map shows that a large amount of NBA talent comes from California and New York. With an exception in California it is also true that a large portion of NBA players come from states East of the Mississippi. This makes a lot of sense because basketball is culturally a much larger deal on the east coast and in Indiana and Ohio\n\n\nMap 2 Gerrymandering in Wisconsin\n\nlibrary(fec16)\n\ndistrict_elections &lt;- results_house |&gt;\n  mutate(district = parse_number(district_id)) |&gt;\n  group_by(state, district) |&gt;\n  summarize(\n    N = n(), \n    total_votes = sum(general_votes, na.rm = TRUE),\n    d_votes = sum(ifelse(party == \"D\", general_votes, 0), na.rm = TRUE),\n    r_votes = sum(ifelse(party == \"R\", general_votes, 0), na.rm = TRUE),\n    .groups = \"drop\" ) |&gt;\n  mutate(\n    other_votes = total_votes - d_votes - r_votes,\n    r_prop = r_votes / total_votes,  \n    winner = ifelse(r_votes &gt; d_votes, \"Republican\", \"Democrat\")\n  )\n\nwis_results &lt;- district_elections |&gt;\n  filter(state == \"WI\")\nwis_results |&gt;                  \n  select(-state)\n\n# A tibble: 8 × 8\n  district     N total_votes d_votes r_votes other_votes r_prop winner  \n     &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;       &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;   \n1        1     7      353990       0       0      353990      0 Democrat\n2        2     2      397581       0       0      397581      0 Democrat\n3        3     2      257401       0       0      257401      0 Democrat\n4        4     4      285858       0       0      285858      0 Democrat\n5        5     3      390507       0       0      390507      0 Democrat\n6        6     4      356935       0       0      356935      0 Democrat\n7        7     4      362061       0       0      362061      0 Democrat\n8        8     4      363574       0       0      363574      0 Democrat\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE\n\nsrc &lt;- \"http://cdmaps.polisci.ucla.edu/shp/districts113.zip\"\nlcl_zip &lt;- fs::path(tempdir(), \"districts113.zip\")\ndownload.file(src, destfile = lcl_zip)\nlcl_districts &lt;- fs::path(tempdir(), \"districts113\")\nunzip(lcl_zip, exdir = lcl_districts)\ndsn_districts &lt;- fs::path(lcl_districts, \"districtShapes\")\n\n# You can also downloaded zip file and uploaded it into R, but this uses a ton of space!\n# dsn_districts &lt;- fs::path(\"Data/districtShapes\")\n\n# read shapefiles into R as an sf object\nst_layers(dsn_districts)\n\nDriver: ESRI Shapefile \nAvailable layers:\n    layer_name geometry_type features fields crs_name\n1 districts113       Polygon      436     15    NAD83\n\n# be able to read as a data frame as well\ndistricts &lt;- st_read(dsn_districts, layer = \"districts113\") |&gt;\n  mutate(DISTRICT = parse_number(as.character(DISTRICT)))\n\nReading layer `districts113' from data source \n  `C:\\Users\\henry\\AppData\\Local\\Temp\\Rtmpw37sBC\\districts113\\districtShapes' \n  using driver `ESRI Shapefile'\nSimple feature collection with 436 features and 15 fields (with 1 geometry empty)\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.1473 ymin: 18.91383 xmax: 179.7785 ymax: 71.35256\nGeodetic CRS:  NAD83\n\n# create basic plot with NC congressional districts\nwis_shp &lt;- districts |&gt;\n  filter(STATENAME == \"Wisconsin\")\n\n\n# Append election results to geospatial data\nwis_merged &lt;- wis_shp |&gt;\n  st_transform(4326) |&gt;\n  inner_join(wis_results, by = c(\"DISTRICT\" = \"district\"))\n\n\n\n#wis &lt;- ggplot(data = wis_merged, aes(fill = winner)) +\n # annotation_map_tile(zoom = 6, type = \"osm\", progress = \"none\") + \n#  geom_sf(alpha = 0.5) +\n#  scale_fill_manual(\"Winner\", values = c(\"Democrat\" = \"blue\", \"Republican\" = \"red\")) + \n # theme_void()\n#wis\n\n\n# A leaflet map can allow us to zoom in and see where major cities fit, etc.\nlibrary(leaflet)\npal &lt;- colorNumeric(palette = \"RdBu\", domain = c(0, 1))\n\nleaflet_wis &lt;- leaflet(wis_merged) |&gt;\n  addTiles() |&gt;\n  addPolygons(\n    weight = 1, fillOpacity = 0.7, \n    color = ~pal(1 - r_prop),   # so red association with Reps\n    popup = ~paste(\"District\", DISTRICT, \"&lt;/br&gt;\", round(r_prop, 4))\n  ) |&gt;                          # popups show prop Republican\n  setView(lng = -90, lat = 45, zoom = 7)\nleaflet_wis\n\n\n\n\n\nThis map may not be properly displaying the data. Sometimes when the website is loaded the leaflet data doesn’t properly transfer, but it should be seen from the code that the democrats handily win districts 2,3, and 4. While the Republicans win the other 5 districts. Based on the data saying that district 2,3, and 4 were all won by large margins, and districts 1,7, and 8 were all close elections, I would conclude that there is some level of gerrymandering going on in Wisconsin."
  }
]